version: "3.9"
services:

  postgres:
    container_name: postgres
    image: postgres:${POSTGRES_VERSION}
    privileged: true
    ports:
      - 15432:5432
    environment:
      - TZ=${TZ}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ${DATA_DIR}/postgres:/var/lib/postgresql/data/:rw
    networks:
      - default
    restart: always

  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf
      - ${DATA_DIR}/redis:/data/:rw
    restart: always
    entrypoint: ["redis-server", "--appendonly", "yes"]
    environment:
      TZ: "$TZ"
    networks:
      - default

  rabbitmq:
    build:
      context: ./services/rabbitmq
      args:
        RABBITMQ_VERSION: ${RABBITMQ_VERSION}
        RABBITMQ_PLUGINS: ${RABBITMQ_PLUGINS}
    container_name: rabbitmq
    restart: always
    ports:
      - "${RABBITMQ_HOST_PORT_C}:5672"
      - "${RABBITMQ_HOST_PORT_S}:15672"
    environment:
       TZ: "$TZ"
       RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
       RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
    networks:
          - default

#  minio:
#    image: bitnami/minio:2022.4.1
#    container_name: minio
#    environment:
#      - MINIO_SERVER_HOST=minio
#      - MINIO_ROOT_USER=user
#      - MINIO_ROOT_PASSWORD=password
#    volumes:
#      - /opt/env/minio/data:/data
#    ports:
#      - 19000:9000
#      - 19001:9001
#    networks:
#      - app-tier
#    restart: always

  elasticsearch:
    build:
      context: ./services/elasticsearch
      args:
        ELASTICSEARCH_VERSION: ${ELASTICSEARCH_VERSION}
        ELASTICSEARCH_PLUGINS: ${ELASTICSEARCH_PLUGINS}
    container_name: elasticsearch
    environment:
      - TZ=$TZ
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ${DATA_DIR}/esdata:/usr/share/elasticsearch/data
      - ${ELASTICSEARCH_CONF_FILE}:/usr/share/elasticsearch/config/elasticsearch.yml
    hostname: elasticsearch
    restart: always
    ports:
      - "${ELASTICSEARCH_HOST_PORT_C}:9200"
      - "${ELASTICSEARCH_HOST_PORT_S}:9300"

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${DATA_DIR}/mysql:/var/lib/mysql/:rw
      - ${MYSQL_LOG_DIR}:/var/log/mysql/:rw

    restart: always
    networks:
      - default
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_ROOT_HOST: "${MYSQL_ROOT_HOST}"
      TZ: "$TZ"

networks:
  default:
    driver: bridge
    ipam:
      driver: default
    # 解除下面的注释可以设置网段，用于nginx等容器固定容器IP
    #config:
    #  - subnet: 10.0.0.0/24